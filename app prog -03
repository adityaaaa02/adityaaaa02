#include <stdio.h>

// Maximum number of vertices
#define MAX_VERTICES 100

// Function to perform DFS
void DFS(int vertex, int visited[], int adjacencyMatrix[][MAX_VERTICES], int numVertices) {
    visited[vertex] = 1;
    printf("%d ", vertex);

    for (int i = 0; i < numVertices; i++) {
        if (adjacencyMatrix[vertex][i] == 1 && !visited[i]) {
            DFS(i, visited, adjacencyMatrix, numVertices);
        }
    }
}

// Function to find connected components
void findConnectedComponents(int adjacencyMatrix[][MAX_VERTICES], int numVertices) {
    int visited[MAX_VERTICES] = {0};

    for (int i = 0; i < numVertices; i++) {
        if (!visited[i]) {
            printf("Connected Component: ");
            DFS(i, visited, adjacencyMatrix, numVertices);
            printf("\n");
        }
    }
}

int main() {
    int numVertices;

    printf("Enter the number of vertices: ");
    scanf("%d", &numVertices);

    int adjacencyMatrix[MAX_VERTICES][MAX_VERTICES];

    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < numVertices; i++) {
        for (int j = 0; j < numVertices; j++) {
            scanf("%d", &adjacencyMatrix[i][j]);
        }
    }

    findConnectedComponents(adjacencyMatrix, numVertices);

    return 0;
}
